



























[{"categories":null,"contents":"A collection of YouTube tutorial video links.Here is a list of all the Google Slides tutorials I created. For full screen mode, click the \u0026ldquo;Menu\u0026rdquo; or three vertical dots button, then click enter \u0026ldquo;Full Screen\u0026rdquo;. Or click the presentation and on the keyboard press Ctrl + Shift + F. Press Esc to exit full screen mode.\nThe problem is, how do I link to the slide deck? I can\u0026rsquo;t embed it Do I just copy and paste the google drive link?\nMicrosoft Windows 11 Tutorials Microsoft Sticky Notes App (Windows 11) Microsoft Notepad App (Windows 11) Microsoft Whiteboard App (Windows 11) Microsoft Windows Clock App (Windows 11) Installation Guides How to Install GIMP on Windows 11 How to Install Live Home 3D - House Design on Windows 11 How to Install Inkscape on Windows 11 Microsoft Sticky Notes App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra How to Navigate the Sticky Notes App How to Navigate the Sticky Notes App Microsoft Notepad App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Microsoft Whiteboard App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Microsoft Windows Clock App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper How to Install GIMP on Windows 11 https://github.com/yuin/goldmark How to Install Live Home 3D - House Design on Windows 11 https://github.com/yuin/goldmark How to Install Inkscape on Windows 11 https://github.com/yuin/goldmark ","date":"21","image":null,"permalink":"http://localhost:1313/slides/","tags":null,"title":"Slides"},{"categories":null,"contents":"Here is a list of all the PDF tutorials I created.\nThis is a sample of the table of contents\nThis tutorial covers:\nHow to Open the Microsoft Sticky Notes App How to Close the Microsoft Sticky Notes App How to Customize the Microsoft Sticky Notes App How to Open the Microsoft Sticky Notes App\rBlah blah blah\rIs this not considered markdown anymore? I have to use html now?\nThis is paragraph text\nMicrosoft Windows 11 Tutorials Microsoft Sticky Notes App (Windows 11) Microsoft Notepad App (Windows 11) Microsoft Whiteboard App (Windows 11) Microsoft Windows Clock App (Windows 11) ^Yes, google drive links do work. Installation Guides How to Install GIMP on Windows 11 How to Install Live Home 3D - House Design on Windows 11 How to Install Inkscape on Windows 11 Microsoft Sticky Notes App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra How to Navigate the Sticky Notes App How to Navigate the Sticky Notes App Microsoft Notepad App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper How to Close the Microsoft Sticky Notes App\rblah blah blah\rMicrosoft Whiteboard App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Microsoft Windows Clock App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper How to Install GIMP on Windows 11 https://github.com/yuin/goldmark How to Install Live Home 3D - House Design on Windows 11 https://github.com/yuin/goldmark How to Install Inkscape on Windows 11 https://github.com/yuin/goldmark How to Customize the Microsoft Sticky Notes App\r","date":"13","image":null,"permalink":"http://localhost:1313/pdfs/","tags":null,"title":"PDFs"},{"categories":null,"contents":"Make a Telegram bot with Node.js and use it with GitHub Actions for sending notifications to you about the repo.Telegram Telegram is a cloud-based mobile and desktop messaging app with a focus on security and speed. It is free to use and extensively hackable. It also has a good bot support system. The API is also easy to implement and has many wrappers for building bots with the API.\nGitHub Actions GitHub Actions is a CI/CD runtime for your GitHub repository. You can run almost anything from scripts to docker containers. You can build, test and deploy your code with GitHub Actions. All these actions are called workflows and workflows differ in the job they\u0026rsquo;re doing. These maybe test workflows, build ones or deployment ones. You can find all the actions on GitHub in the marketplace\nBuilding the Bot Prerequisites Basic JavaScript Knowledge Basic GitHub Knowledge Telegram Account There are templates for building actions. Here we\u0026rsquo;re gonna start from scratch\nEnvironment Setup Node, You can download node from their website NPM comes with node, so you don\u0026rsquo;t have to worry about it. Initialize the Project $ git init ## initialize a new git repository for version management --- $ npm init dotenv, Dotenv can be downloaded via $ npm i dotenv --- $ yarn add dotenv node-telegram-bot-api, node-telegram-bot-api is a simple wrapper for building telegram bots. You can download it via $ npm i node-telegram-bot-api --- $ yarn add node-telegram-bot-api @zeit/ncc, NCC is a Simple CLI for compiling a Node.js module into a single file, together with all its dependencies, GCC-style. It\u0026rsquo;s a dev dependency and can be downloaded yarn add --dev @zeit/ncc --- npm i -D @zeit/ncc Folder Structure The dist folder will be automatically created. action.yml will be made\n. ‚îú‚îÄ‚îÄ dist ‚îÇ ‚îî‚îÄ‚îÄ index.js ‚îú‚îÄ‚îÄ index.js ‚îú‚îÄ‚îÄ action.yml ‚îú‚îÄ‚îÄ README.md ‚îî‚îÄ‚îÄ package.json index.js is the file we\u0026rsquo;re defining the bot action.yml is the file we\u0026rsquo;ll define the action and it\u0026rsquo;s behaviours Making the Bot We need to get an API bot token from telegram. For that Go to Telegram and Search for Botfather. It\u0026rsquo;s a bot. Create a new bot with the /newbot command and get the API key. We\u0026rsquo;ll need that, also talk to jsondump bot and get your chat id. The output may be like this, so\n{ \u0026#34;update_id\u0026#34;: 143943779, \u0026#34;message\u0026#34;: { \u0026#34;message_id\u0026#34;: 181575, \u0026#34;from\u0026#34;: { \u0026#34;id\u0026#34;: 123456 // this is what we need \u0026#34;is_bot\u0026#34;: false, \u0026#34;first_name\u0026#34;: \u0026#34;Tg Name\u0026#34;, \u0026#34;username\u0026#34;: \u0026#34;TG Username\u0026#34;, \u0026#34;language_code\u0026#34;: \u0026#34;en\u0026#34; }, \u0026#34;chat\u0026#34;: { \u0026#34;id\u0026#34;: 123456, \u0026#34;first_name\u0026#34;: \u0026#34;Tg Name\u0026#34;, \u0026#34;username\u0026#34;: \u0026#34;TG Username\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;private\u0026#34; }, \u0026#34;date\u0026#34;: 1584119424, \u0026#34;text\u0026#34;: \u0026#34;message\u0026#34; } } This will be needed for further use and We need to add it to the repo secrets which can be found in the repo settings. Be careful to add it as token and chat like as shown below Writing the Action and Building the Bot Fire up the terminal/cmd and make a new folder. Install the dependencies. Run the following command\n$ touch index.js action.yml Open your favourite text editor within the folder or with the file. We\u0026rsquo;ll define the bot in index.js\nrequire(\u0026#34;dotenv\u0026#34;).config const Bot = require(\u0026#39;node-telegram-bot-api\u0026#39;); const { INPUT_STATUS: ipstatus, INPUT_TOKEN: tgtoken,//Telegram api token INPUT_CHAT: chatid,// Telegram Chat ID INPUT_IU_TITLE: ititle,// Issue title INPUT_IU_NUM: inum,// Issue Number INPUT_IU_ACTOR: iactor,// Issue made by INPUT_IU_BODY: ibody,// Issue Body INPUT_PR_NUM: pnum,// PR Number INPUT_PR_STATE: prstate,// PR Opened, reponed or closed INPUT_PR_TITLE: ptitle,// PR Title INPUT_PR_BODY: pbody,// Body of the PR GITHUB_EVENT_NAME: ghevent,// Name of the trigger event GITHUB_REPOSITORY: repo,// Repository the trigger was made from GITHUB_ACTOR: ghactor,// User who triggered the action GITHUB_SHA: sha,// Commit ID GITHUB_WORKFLOW: ghwrkflw// Workflow Name } = process.env; const bot = new Bot(tgtoken) First, we\u0026rsquo;re defining the dotenv for config and initializing Telegram Bot. Here we\u0026rsquo;re defining the alias variables for the environment variables. You might notice an INPUT_ for almost every environment variable, this is because GitHub Actions pass the env variable with an INPUT prefix. Other env variables are action\u0026rsquo;s default environment variables. Then we initialized the bot with the API token.\nGitHub actions could be triggered with Issues, Pull Request or Pushes. You can find the trigger events here. Here we\u0026rsquo;re gonna get a message from the bot when an Issue or Pull Request or a Push event has happened.\nconst evresp = (gevent) =\u0026gt; { switch (gevent) { case \u0026#34;issues\u0026#34;: return ` ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è Issue ${prstate} Issue Title and Number : ${ititle} | #${inum} Commented or Created By : \\`${iactor}\\` Issue Body : *${ibody}* [Link to Issue](https://github.com/${repo}/issues/${inum}) [Link to Repo ](https://github.com/${repo}/) [Build log here](https://github.com/${repo}/commit/${sha}/checks)` case \u0026#34;pull_request\u0026#34;: return ` üîÉüîÄüîÉüîÄüîÉüîÄ PR ${prstate} PR Number: ${pnum} PR Title: ${ptitle} PR Body: *${pbody}* PR By: ${ghactor} [Link to Issue](https://github.com/${repo}/pull/${pnum}) [Link to Repo ](https://github.com/${repo}/) [Build log here](https://github.com/${repo}/commit/${sha}/checks)` default: return ` ‚¨ÜÔ∏è‚áÖ‚¨ÜÔ∏è‚áÖ ID: ${ghwrkflw} Action was a *${ipstatus}!* \\`Repository: ${repo}\\` On: *${ghevent}* By: *${ghactor}* Tag: ${process.env.GITHUB_REF} [Link to Repo ](https://github.com/${repo}/) ` } } In these lines of code, we\u0026rsquo;re just initializing a switch statement for the responses. We\u0026rsquo;re also declaring an anonymous function to use the switch responses via a function later. We\u0026rsquo;re using all the defined variables in the switch. You can check the trigger Events to get how the event is triggered and what keyword should be used.\nNow for the last part of the Js file, we just take the response from the switch and assign it to a constant. Then we use the sendMessage function of the node-telegram-bot-api to send the message to the bot with the chatid and the output as the arguments.\nconst output = evresp(ghevent) bot.sendMessage(chatid,output,{parse_mode : \u0026ldquo;Markdown\u0026rdquo;})\nCompiling and Minifying the Js code Since we have installed @zeit/ncc and this is used for the making the whole program with all the APIs to a single file and we need to use NCC for that. We just need to run\nyarn run ncc build index.js -C -m -o dist or you might wanna add the following to you package.json file, and run npm run test to compile and minify the code.\n\u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;ncc build index.js -C -m -o dist\u0026#34; }, This will create a dist folder with and index.js file which contains the compiled code.\nMaking it a valid action For making this Js file a valid action, we need to add an action.yml file. The action.yml for this action is like this\nname: \u0026#39;Action Name\u0026#39; description: \u0026#39;Action Descreption\u0026#39; author: \u0026#39;\u0026lt;author name\u0026gt;\u0026#39; inputs: chat: description: \u0026#39;Chat to send: chat id or @channel_name\u0026#39; required: true token: description: \u0026#39;Telegram Bot token\u0026#39; required: true status: description: \u0026#39;Job status\u0026#39; required: true iu_title: description: \u0026#39;Issue Title\u0026#39; default: ${{ github.event.issue.title }} iu_num: description: \u0026#39;Issue Number\u0026#39; default: ${{ github.event.issue.number }} iu_actor: description: \u0026#39;Issue Triggerer\u0026#39; default: ${{ github.event.issue.user.login }} iu_com: description: \u0026#39;Issue Comment\u0026#39; default: ${{github.event.comment.body}} pr_state: description: \u0026#39;State of the PR\u0026#39; default: ${{ github.event.action }} pr_num: description: \u0026#39;PR Number\u0026#39; default: ${{ github.event.number }} pr_title: description: \u0026#39;Title of the PR\u0026#39; default: ${{ github.event.pull_request.title }} pr_body: description: \u0026#39;Body/Contents of the PR\u0026#39; default: ${{ github.event.pull_request.body }} runs: using: \u0026#34;node12\u0026#34; main: \u0026#34;dist/index.js\u0026#34; branding: icon: \u0026#39;repeat\u0026#39; color: \u0026#39;green\u0026#39; Here we\u0026rsquo;re defining the Input variables to be loaded for the action in GitHub\u0026rsquo;s runtime environemt. All these default data are taken from the response of the webhooks which are send by GitHub when a trigger event is occured. You can find out more in the Action Documentation Here.\nruns: using: \u0026#34;node12\u0026#34; main: \u0026#34;dist/index.js\u0026#34; Here we are defining that this is a node action and should run in an environment with node, and the file which should be run, here the index.js file in the dist folder. That should do it. Create a new commit and push it to a repo. Create a new tag and this action will appear in the marketplace.\nDefining a workflow to test your action GitHub Action workflows are defined using the .yml syntax. Here is an example of a sample workflow for this action\nname: \u0026lt;Workflow Name\u0026gt; on: push: pull_request: types: [opened, closed] issues: types: [opened, closed, reopened] jobs: build: runs-on: ubuntu-latest steps: - name: \u0026lt;AnyName\u0026gt; uses: \u0026lt;username\u0026gt;/\u0026lt;repo\u0026gt;@master if: always() with: chat: ${{ secrets.chat }} token: ${{ secrets.token }} status: ${{ job.status }} The Complete code for the bot is\n//Initializing dotenv and the bot require(\u0026#34;dotenv\u0026#34;).config const Bot = require(\u0026#39;node-telegram-bot-api\u0026#39;); // aliasing the environment variables const { INPUT_STATUS: ipstatus, INPUT_TOKEN: tgtoken, //Telegram api token INPUT_CHAT: chatid,// Telegram Chat ID INPUT_IU_TITLE: ititle,// Issue title INPUT_IU_NUM: inum,// Issue Number INPUT_IU_ACTOR: iactor, // Issue made by INPUT_IU_BODY: ibody, // Issue Body INPUT_PR_NUM: pnum, // PR Number INPUT_PR_STATE: prstate, // PR Opened, reponed or closed INPUT_PR_TITLE: ptitle, // PR Title INPUT_PR_BODY: pbody, // Body of the PR GITHUB_EVENT_NAME: ghevent, // Name of the trigger event GITHUB_REPOSITORY: repo, // Repository the trigger was made from GITHUB_ACTOR: ghactor, // User who triggered the action GITHUB_SHA: sha, // Commit ID GITHUB_WORKFLOW: ghwrkflw // Workflow Name } = process.env; const bot = new Bot(tgtoken) // Function to return the response for the specific trigger const evresp = (gevent) =\u0026gt; { switch (gevent) { //Switch statement for issues case \u0026#34;issues\u0026#34;: return ` ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è Issue ${prstate} Issue Title and Number : ${ititle} | #${inum} Commented or Created By : \\`${iactor}\\` Issue Body : *${ibody}* [Link to Issue](https://github.com/${repo}/issues/${inum}) [Link to Repo ](https://github.com/${repo}/) [Build log here](https://github.com/${repo}/commit/${sha}/checks)` // Switch statement for Pull Requests case \u0026#34;pull_request\u0026#34;: return ` üîÉüîÄüîÉüîÄüîÉüîÄ PR ${prstate} PR Number: ${pnum} PR Title: ${ptitle} PR Body: *${pbody}* PR By: ${ghactor} [Link to Issue](https://github.com/${repo}/pull/${pnum}) [Link to Repo ](https://github.com/${repo}/) [Build log here](https://github.com/${repo}/commit/${sha}/checks)` default: // switch statement for Pushes return ` ‚¨ÜÔ∏è‚áÖ‚¨ÜÔ∏è‚áÖ ID: ${ghwrkflw} Action was a *${ipstatus}!* \\`Repository: ${repo}\\` On: *${ghevent}* By: *${ghactor}* Tag: ${process.env.GITHUB_REF} [Link to Repo ](https://github.com/${repo}/) ` } } // assigning the output to a variable const output = evresp(ghevent) // sending the message bot.sendMessage(chatid,output,{parse_mode : \u0026#34;Markdown\u0026#34;}) You can try out many different items using actions and this is just a sample action to get you started. Maybe sending Cat GIFs if the build succeded on the pull request or sending a welcome message to a first time contributor. You imagination is the limitüòÑ and Never Stop being ‚ö°Ô∏è\n","date":"01","image":null,"permalink":"http://localhost:1313/posts/tg-gh/","tags":null,"title":"Telegram Bot for  GitHub Actions"},{"categories":null,"contents":"Microsoft Sticky Notes does more than just note-taking. Insert images, hyperlinks, and even customize the sticky note color. Learn how to open the Sticky Notes app on Windows 11.This tutorial covers:\nWhat is the Microsoft Sticky Notes App? How to Open the Microsoft Sticky Notes App With Search No time to scroll down? Click through this tutorial presentation:\nWatch a tutorial video here:\nWhat is the Microsoft Sticky Notes App? Sticky Notes is a note-taking app that comes with Windows 11. Notes can have formatted text (bold, italic, underline, strikethrough, and bulleted lists), images, and recognized URLs. For further customization, choose from seven different colors of sticky notes and a \u0026ldquo;Dark\u0026rdquo; mode for the app.\nHow to Open the Sticky Notes App With Search *Step 1: Go down to the taskbar and click Start (four blue squares). *Step 2: In the Start window that opens, click the top search bar and type \u0026ldquo;sticky notes\u0026rdquo;. *Step 3: On the search results screen, click one of the following to open the Sticky Notes app. Troubleshooting the image paths If the current post file is in content/posts, then the path should go back from posts to content, go back from content to root, from root to static, then images, then the image ../../static/images/blogstartbuttonedit.png Should not be this, because posts goes back to content which is in the root\nEven when I click the goddamn vscode link, it still doesn\u0026rsquo;t work. It knows that it\u0026rsquo;s an image, but it just won\u0026rsquo;t link to it. Otherwise the alt text wouldn\u0026rsquo;t appear\nA screenshot of the cursor clicking the Start (four blue squares) button on the lower left side of the taskbar at the bottom of the screen. Or ../../assets/images/blogstartbuttonedit.png. Can\u0026rsquo;t be this\nOr blogstartbutonedit.png. This doesn\u0026rsquo;t work\nOr ../blogstartbuttonedit.png this shouldn\u0026rsquo;t work because you didn\u0026rsquo;t specify the static folder\nOr ../static/blogstartbuttonedit.png\nOr ../static/images/blogstartbuttonedit.png\nOr perhaps the file is not the post file, but the html file which is single.html, so layouts/_default/single.html, so ../to go to layouts, ../ to go to root, then static/images/filename ../../static/images/filename. But this doesn\u0026rsquo;t work\nFuture posts will cover more features of the Sticky Notes app, so stay tuned!\n","date":"01","image":null,"permalink":"http://localhost:1313/posts/post-1/","tags":["Sticky Notes","Windows 11"],"title":"How to Open the Microsoft Sticky Notes App (Windows 11)"},{"categories":null,"contents":"Start by getting a small backpack (less than 20 liters) and then just travel with what fits in that.I‚Äôm on a trip at the moment, and a friend who generously let me sleep on his couch looked at my small travel backpack and commented on how little I travel with: ‚ÄúThat‚Äôs impressive,‚Äù he said.\nI was a little surprised, because though I‚Äôve gotten that comment before, it‚Äôs become normal for me to travel with just a small bag (10 lbs. or less, usually), and I have friends who travel with even less. But then I remembered that I‚Äôm far from normal in this way.\nI gave him a tip for getting started, and I recommend it for all of you, who want to travel light ‚Äî or ultralight, as I call it, because for many people traveling light is taking a carry-on roller luggage. For me, having those roller bags is lugging too much, because you can run up stairs with it with ease, or carry it all over a city without worrying about stowing away your luggage somewhere first. It‚Äôs so much easier to travel ultralight.\nHere‚Äôs the tip I gave him to get started: start by getting a small backpack (less than 20 liters) and then just travel with what fits in that.\nThat‚Äôs how to start. But you‚Äôll probably want some guidance on what to put into the bag, and how to travel with so little. Here‚Äôs some guidance to get started:\nI travel with a lightweight laptop (Macbook Air), a few clothes, my phone, earbuds and some charging cords, toiletries, and almost nothing else. A lightweight windbreaker for wind and light rain (Patagonia Houdini). An eye mask and ear plugs. A collapsible water bottle. My passport. That‚Äôs about it. No extra shoes. No books. No suit. No travel pillow. No extra camera other than my phone. I‚Äôm not sure what else everyone else brings, but none of that. I bring clothes that I can wash in the sink or shower and that will dry overnight. Lightweight stuff that I can layer. Often they‚Äôre workout-style clothes or things from companies like Outlier or Patagonia that travel well. I don‚Äôt bring enough underwear or socks for every day of the trip, because I wash them every couple of days. I only bring one or two extra T-shirts, generally wearing the same two shirts the whole trip, even if it‚Äôs a month long. No one has ever once cared what I wear when I‚Äôm traveling. I bring minimal toiletries: a small shaver for my head, razor, toothbrush, floss small tubes of toothpaste and shaving cream, deodorant, nail clippers, ibuprofen. For cold places, I have thermal underwear and a couple long-sleeve layers (generally all Patagonia capilene stuff), and a beanie. I don‚Äôt usually go to places where it‚Äôs snowing (I don‚Äôt know why, maybe snow isn‚Äôt my thing), so I don‚Äôt have clothes to deal with that weather. For warm places, I will bring flip flops and swim trunks, and leave most of the colder layers behind. That‚Äôs enough for a monthlong trip, which I‚Äôve done multiple times with this kind of setup. For a shorter trip of a few days, I might bring even less.\nI really love traveling this way, and am more than willing to sacrifice bringing extra things for the luxury of traveling lightweight.\nBy the way, you don‚Äôt need much more than this kind of setup even in everyday life.\nFor more info on this, check out my Ultralight ebook, and my friend Tynan has a great book called Forever Nomad.\n","date":"18","image":null,"permalink":"http://localhost:1313/posts/post-4/","tags":null,"title":"Getting Started with Traveling Ultralight"},{"categories":null,"contents":"","date":"28","image":null,"permalink":"http://localhost:1313/archives/","tags":null,"title":""},{"categories":null,"contents":"Hugo, the world‚Äôs fastest framework for building websitesWritten in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","date":"28","image":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":null,"contents":"A collection of YouTube tutorial video links.Here is a list of all the YouTube video tutorials I created.\nMicrosoft Windows 11 Tutorials Microsoft Sticky Notes App (Windows 11) Microsoft Notepad App (Windows 11) Microsoft Whiteboard App (Windows 11) Microsoft Windows Clock App (Windows 11) Link to playlists here Installation Guides How to Install GIMP on Windows 11 How to Install Live Home 3D - House Design on Windows 11 How to Install Inkscape on Windows 11 Microsoft Sticky Notes App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra How to Navigate the Sticky Notes App How to Navigate the Sticky Notes App Microsoft Notepad App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Microsoft Whiteboard App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Microsoft Windows Clock App (Windows 11) https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper How to Install GIMP on Windows 11 https://github.com/yuin/goldmark How to Install Live Home 3D - House Design on Windows 11 https://github.com/yuin/goldmark How to Install Inkscape on Windows 11 https://github.com/yuin/goldmark All the videos listed here were created with kdenlive.\nNormal Normal Normal Normal ","date":"28","image":null,"permalink":"http://localhost:1313/videos/","tags":null,"title":"Videos"},{"categories":null,"contents":"You can set dark mode as default by setting params.mode to dark in config.toml or set it to auto which will detect based on your OS and switch to dark mode. For more details refer documentation\nHere is how you can switch based on your OS\niOS Android macOS Windows 10 ","date":"18","image":null,"permalink":"http://localhost:1313/posts/post-7/","tags":null,"title":"How to test dark mode?"},{"categories":null,"contents":"Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nHeading 1 Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nHeading 2 Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nHeading 3 Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nHeading 4 Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nHeading 5 Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nHeading 6 Lid est laborum et dolorum fuga. Et harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit quo minus id quod amets untra dolor amet sad. Sed ut perspser iciatis unde omnis iste natus error sit voluptatem accusantium doloremque laste. Dolores sadips ipsums sits.\nTypography Lid est laborum et dolorum fuga, This is an example inline link. Et harum quidem rerum facilis, This is bold and emphasis cumque nihilse impedit quo minus id quod amets untra dolor amet sad. While this is code block() and following is a pre tag\nprint 'this is pre tag' Following is the syntax highlighted code block\nfunc getCookie(name string, r interface{}) (*http.Cookie, error) { rd := r.(*http.Request) cookie, err := rd.Cookie(name) if err != nil { return nil, err } return cookie, nil } func setCookie(cookie *http.Cookie, w interface{}) error { // Get write interface registered using `Acquire` method in handlers. wr := w.(http.ResponseWriter) http.SetCookie(wr, cookie) return nil } This is blockquote, Will make it better now\n\u0026lsquo;I want to do with you what spring does with the cherry trees.\u0026rsquo; cited ~Pablo Neruda*\nEt harum quidem rerum facilis est et expeditasi distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihilse impedit\nUnordered list\nRed Green Blue Ordered list\nRed Green Blue ","date":"18","image":null,"permalink":"http://localhost:1313/posts/post-5/","tags":null,"title":"Typography"},{"categories":null,"contents":"Here is a demo of all shortcodes available in Hugo.Images Dave Herring Dave Herring Github Gist Youtube video Tweet Vimeo Instagram View this post on Instagram Callouts üí° I guess this works ","date":"18","image":null,"permalink":"http://localhost:1313/posts/post-6/","tags":null,"title":"Hugo shortcodes"},{"categories":null,"contents":"The art of letting go.The end of procrastination is the art of letting go.\nI‚Äôve been a lifelong procrastinator, at least until recent years. I would put things off until deadline, because I knew I could come through. I came through on tests after cramming last minute, I turned articles in at the deadline after waiting until the last hour, I got things done.\nUntil I didn‚Äôt. It turns out procrastinating caused me to miss deadlines, over and over. It stressed me out. My work was less-than-desirable when I did it last minute. Slowly, I started to realize that procrastination wasn‚Äôt doing me any favors. In fact, it was causing me a lot of grief.\nBut I couldn‚Äôt quit. I tried a lot of things. I tried time boxing and goal setting and accountability and the Pomodoro Technique and Getting Things Done. All are great methods, but they only last so long. Nothing really worked over the long term.\nThat‚Äôs because I wasn‚Äôt getting to the root problem.\nI hadn‚Äôt figured out the skill that would save me from the procrastination.\nUntil I learned about letting go.\nLetting go first came to me when I was quitting smoking. I had to let go of the ‚Äúneed‚Äù to smoke, the use of my crutch of cigarettes to deal with stress and problems.\nThen I learned I needed to let go of other false needs that were causing me problems: sugar, junk food, meat, shopping, beer, possessions. I‚Äôm not saying I can never do these things again once I let go of these needs, but I let go of the idea that they‚Äôre really necessary. I let go of an unhealthy attachment to them.\nThen I learned that distractions and the false need to check my email and news and other things online ‚Ä¶ were causing me problems. They were causing my procrastination.\nSo I learned to let go of those too.\nHere‚Äôs the process I used to let go of the distractions and false needs that cause procrastination:\nI paid attention to the pain they cause me, later, instead of only the temporary comfort/pleasure they gave me right away. I thought about the person I want to be, the life I want to live. I set my intentions to do the good work I think I should do. I watched my urges to check things, to go to the comfort of distractions. I saw that I wanted to escape discomfort of something hard, and go to the comfort of something familiar and easy. I realized I didn‚Äôt need that comfort. I could be in discomfort and nothing bad would happen. In fact, the best things happen when I‚Äôm in discomfort. And then I smile, and breathe, and let go.\nAnd one step at a time, become the person I want to be.\n","date":"18","image":null,"permalink":"http://localhost:1313/posts/post-3/","tags":["Procrastinating"],"title":"How I Learned to Stop Procrastinating, \u0026 Love Letting Go"},{"categories":null,"contents":"We spend our days filling in every available space, cramming in more tasks, responding to messages, checking social media and online sites, watching videos.\nWe are afraid of empty space in our lives.\nThe result is often a continual busyness, constant distraction and avoidance, lack of focus, lack of satisfaction with our lives.\nWe run from silence. We run from the spaces between tasks and appointments. We run from solitude and stillness. We try to fill every second with activity, with something useful, as if silence and space are not valuable.\nBut what are we afraid of?\nAnd who would we be if we didn‚Äôt have that fear?\nWe‚Äôre afraid of space and stillness and silence because it highlights the uncertainty, instability, groundlessness, insecurity, shakiness that lie underneath every second of our lives. We‚Äôre afraid of having to face this instability and uncertainty, of having to feel the fear of it.\nWithout the fear of all of the uncertainty that is highlighted by space ‚Ä¶ we become free.\nI know in my life, when I allow myself to have stillness, silence, solitude, simplicity and space ‚Ä¶ it leaves room to face whatever is coming up for me. It gives me room to fully feel any feelings that I‚Äôve been avoiding. It allows me to be more honest with myself, instead of using distractions and busyness to cover up what I don‚Äôt want to see.\nAnd in the end, I develop trust that the space is not something to be feared, but rather something to be treasured. A gift, filled with learning and not knowing and shakiness and beauty.\nYou might try allowing more space to be in your day, without filling it:\nTake some time between tasks for stillness. Sit out in nature, in silence, without technology. When you notice yourself reaching for your phone, pause. See if you can just be still, just savor some space. When you feel uncertainty or instability in your life (hint: it‚Äôs always there), let yourself feel it. Be present with it, without needing to run or avoid. When you feel fear, be open-hearted with it and allow yourself fully feel it, being friendly with it. Your relationship with fear will change if you become friendly with it. Do less, and trust that things won‚Äôt fall apart. Or if they do fall apart, you can be present with that instability. When you‚Äôre in line, driving, eating, walking, exercising ‚Ä¶ see if you can do those things in silence, without technology, without needing to do something ‚Äúuseful.‚Äù Find the value in these spaces. Notice who you are without the fear of space. Savor these spaces, their deliciousness. Savor the groundlessness, as something filled with freedom if we learn not to fear it. Be present with the fear and uncertainty, as good friends not as enemies.\nLet your heart be open raw tender and vulnerable, and your mind embracing the spaciousness of the vast blue sky of open awareness.\n","date":"18","image":null,"permalink":"http://localhost:1313/posts/post-2/","tags":["Space"],"title":"Fearlessness: How to Stop Running from Space"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"01","image":null,"permalink":"http://localhost:1313/search/","tags":null,"title":"Search Results"}]